package com.haothink.bjtu;

/**
 * @author wanghao
 * @date 2019年08月07日 13:07
 * description: Umi's Problem
 *
 * 题面描述
 * Umi 和 Kotori 去学校春游。有一天晚上， Umi 和 Kotori 玩了一个游戏。 Kotori 给了 Umi 一个括号序列， Umi 可以任意擦去括号序列中的括号， Umi 想知道可以获得的合法括号序列有多少种，空序列除外。
 *
 * 括号序列是指由正括号、反括号组成的字符串，如 (), (())()() 。合法括号序列定义如下：
 *
 * 1 、空串是一个合法序列；
 *
 * 2 、如果 A 是一个合法序列，那么 (A) 是一个合法序列；
 *
 * 3 、如果 A ， B 都是合法序列，那么 AB 是一个合法序列；
 *
 * 两个括号序列不同是指两个括号序列长度不同，或者至少有一个位置字符不同。
 *
 * 输入数据
 * 输入的第一行为一个正整数 T ，表示一共 T 组测试数据。每组数据的第一行为一个正整数 n(n <= 1000) ，表示 Kotori 给出的序列一共有 n 个字符，第二行为给出的括号序列。
 *
 * 输出数据
 * 对每组测试数据，输出类似” Case #i: result ”的结果，表示第 i 组测试数据中合法序列旳数量。由于最后结果可能较大，请输出 result Mod 1000000007 的值。
 *
 * 样例输入
 * 2
 * 2
 * ()
 * 10
 * ))()(((())
 *
 * 样例输出
 * Case #1: 1
 * Case #2: 4
 */
public class UmiProblem {

    public static void main(String[] args) {

    }



}
