package com.haothink.bjtu;

/**
 * Created by wanghao on 2019-10-27
 * mail:wanghaotime@qq.com
 *
 * Problem B. 吃糖果游戏
 * 时间限制 1000 ms
 * 内存限制 128 MB
 * 题目描述
 * 　　Matrix67和Shadow正在做一个小游戏。
 * 　　桌子上放着两堆糖果，Matrix67和Shadow轮流对这些糖果进行操作。在每一次操作中，操作者需要吃掉其中一堆糖果，并且把另一堆糖果分成两堆（可以不相等）留给对方操作。游戏如此进行下去，糖果数会越来越少，最后必将出现这样一种情况：某人吃掉一堆糖果后发现另一堆里只剩一块糖果不能再分了。游戏规定此时该操作者吃掉最后这一块糖果从而取胜。
 * 　　这个游戏是不公平的。对于任意一种初始状态，总有一方有必胜策略。所谓有必胜策略是指，无论对方如何操作，自己总有办法取胜。
 * 　　Matrix67和Shadow将进行10次游戏，每一次游戏中总是Matrix67先进行操作。Matrix67想知道每一次游戏中谁有必胜策略。
 *
 * 输入数据
 * 　　输入数据一共 10 行，每行有两个用空格隔开的正整数，表示一次游戏开始时桌子上两堆糖果分别有多少个。
 * 　　对于 50 的数据，这些正整数均不超过100；
 * 　　对于 70 的数据，这些正整数均不超过 10 000 ；
 * 　　对于100%的数据，这些正整数均不超过 10 000 位。
 * 输出数据
 * 　　输出十行字符串。这些字符串只能是“Matrix67”或“Shadow”，它们表示对应的十行输入数据中有必胜策略的一方。
 * 　　请注意大小写。
 **/
public class EatCandyGame {


    public static void main(String[] args) {

    }


    

}
